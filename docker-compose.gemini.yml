version: "3.8"

services:
  server:
    image: vim-actions-server-dev-gemini
    container_name: vim-actions-server-gemini
    ports:
      - "${SERVER_PORT:-8280}:8280"
    volumes:
      - ./server:/app
      # - /app/main
      - ./.env:/app/.env
      - ./.env.local:/app/.env.local:ro # Mount .env.local if it exists (read-only)
      - server_cache:/go/pkg/mod
      - server_gocache:/.cache/go-build
      - server_db:/app/tmp
    environment:
      - GO_ENV=development
      - CGO_ENABLED=1
      - GOCACHE=/.cache/go-build
      - GOMODCACHE=/go/pkg/mod
      - SERVER_PORT=8280 # Internal port should always be 8280
    working_dir: /app
    networks:
      - dev-network-gemini
    restart: unless-stopped
    depends_on:
      - valkey

  client:
    image: vim-actions-client-dev-gemini
    container_name: vim-actions-client-gemini
    ports:
      - "${CLIENT_PORT:-3010}:3010"
    volumes:
      - client_node_modules:/app/node_modules
      - client_dist:/app/dist
    environment:
      - NODE_ENV=development
      - VITE_GENERAL_VERSION=${VITE_GENERAL_VERSION:-0.0.1}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8280}
      - VITE_WS_URL=${VITE_WS_URL:-ws://localhost:8280/ws}
      - VITE_ENV=${VITE_ENV:-local}
      - VITE_HOST=0.0.0.0
      - VITE_PORT=3010 # Internal port should always be 3010
    working_dir: /app
    networks:
      - dev-network-gemini
    restart: unless-stopped
    depends_on:
      - server

  valkey:
    image: vim-actions-valkey-dev-gemini
    container_name: vim-actions-valkey-gemini
    ports:
      - "${DB_CACHE_PORT:-6379}:6379"
    volumes:
      - valkey_data:/data
      - valkey_logs:/var/log/valkey
    environment:
      - VALKEY_ENV=development
    networks:
      - dev-network-gemini
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

volumes:
  server_tmp:
  server_cache:
  server_gocache:
  server_db:
  client_node_modules:
  client_dist:
  valkey_data:
  valkey_logs:

networks:
  dev-network-gemini:
    driver: bridge
